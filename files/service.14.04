#!/bin/sh
### BEGIN INIT INFO
# Provides:          snapteld
# Required-Start:    $network $named $syslog
# Required-Stop:     $network $named $syslog
# Should-Start:      snapteld
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
### END INIT INFO

DAEMON="/opt/snap/sbin/snapteld"
DAEMON_OPTS=""
NAME="snapteld"
PROCNAME="snapteld"
DESC="Snap, an open telemetry framework"
PIDFILE="/var/run/snapteld.pid"

test -x $DAEMON || exit 0

[ -r /etc/default/snapteld ] && . /etc/default/snapteld

. /lib/lsb/init-functions

start_snapteld() {
    #start-stop-daemon --start --quiet --pidfile $PIDFILE --startas $DAEMON -- $DAEMON_OPTS
    $DAEMON $DAEMON_OPTS > /dev/null 2>&1 &
    PID=$!
    RETVAL=$?
    [ $RETVAL = 0 ] && echo $PID > ${PIDFILE}
    return $RETVAL
}

stop_snapteld() {
    start-stop-daemon --stop --retry TERM/10/KILL/5 --quiet --oknodo --pidfile $PIDFILE --name $PROCNAME
    rm -f "$PIDFILE"
}

restart_snapteld() {
    log_begin_msg "Restarting $DESC"
    stop_snapteld
    start_snapteld
    log_end_msg $?
}

status_snapteld() {
    if (type status_of_proc > /dev/null 2>&1) ; then
        status_of_proc -p "${PIDFILE}" "${DAEMON}" "${NAME}"
    else
        status_of_proc() {
            local pidfile daemon name status

            pidfile=
            OPTIND=1
            while getopts p: opt ; do
                case "$opt" in
                    p)  pidfile="$OPTARG";;
                esac
            done
            shift $(($OPTIND - 1))

            if [ -n "$pidfile" ]; then
                pidfile="-p $pidfile"
            fi
            daemon="$1"
            name="$2"
            status="0"
            pidofproc $pidfile $daemon >/dev/null || status="$?"
            if [ "$status" = 0 ]; then
                log_success_msg "$name is running"
                return 0
            elif [ "$status" = 4 ]; then
                log_failure_msg "could not access PID file for $name"
                return $status
            else
                log_failure_msg "$name is not running"
                return $status
            fi
        }
        status_of_proc -p "${PIDFILE}" "${DAEMON}" "${NAME}"
    fi
}

case "$1" in
    start)
        log_begin_msg "Starting $DESC"
        start_snapteld
        log_end_msg $?
    ;;
    stop)
        log_begin_msg "Stopping $DESC"
        stop_snapteld
        log_end_msg $?
    ;;
    status)
        status_snapteld
    ;;
    restart|force-reload)
        restart_snapteld
    ;;
    condrestart)
        if status_snapteld >/dev/null 2>&1; then
            restart_snapteld
        fi
    ;;
    *)
        echo "Usage: $0 {start|stop|status|restart|condrestart}" >&2
        exit 1
    ;;
esac
